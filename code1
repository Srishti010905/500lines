import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Product {
    private int id;
    private String name;
    private double price;
    private int quantity;

    public Product(int id, String name, double price, int quantity) {
        this.id = id;
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public void displayProduct() {
        System.out.printf("ID: %d | Name: %s | Price: %.2f | Quantity: %d%n", id, name, price, quantity);
    }

    @Override
    public String toString() {
        return String.format("ID: %d | Name: %s | Price: %.2f | Quantity: %d", id, name, price, quantity);
    }
}

class Inventory {
    private List<Product> products;

    public Inventory() {
        products = new ArrayList<>();
    }

    public void addProduct(Product product) {
        products.add(product);
    }

    public void removeProduct(int productId) {
        products.removeIf(product -> product.getId() == productId);
    }

    public Product findProductById(int id) {
        for (Product product : products) {
            if (product.getId() == id) {
                return product;
            }
        }
        return null;
    }

    public void updateProductQuantity(int productId, int newQuantity) {
        Product product = findProductById(productId);
        if (product != null) {
            product.setQuantity(newQuantity);
        }
    }

    public void displayInventory() {
        if (products.isEmpty()) {
            System.out.println("No products in the inventory.");
        } else {
            System.out.println("Inventory List:");
            for (Product product : products) {
                product.displayProduct();
            }
        }
    }

    public boolean isInventoryEmpty() {
        return products.isEmpty();
    }
}

class Store {
    private Inventory inventory;

    public Store() {
        inventory = new Inventory();
    }

    public void showMainMenu() {
        System.out.println("1. View Inventory");
        System.out.println("2. Add Product");
        System.out.println("3. Remove Product");
        System.out.println("4. Update Product Quantity");
        System.out.println("5. Exit");
    }

    public void addProductToInventory() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter Product ID:");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consume the newline
        System.out.println("Enter Product Name:");
        String name = scanner.nextLine();
        System.out.println("Enter Product Price:");
        double price = scanner.nextDouble();
        System.out.println("Enter Product Quantity:");
        int quantity = scanner.nextInt();

        Product newProduct = new Product(id, name, price, quantity);
        inventory.addProduct(newProduct);
        System.out.println("Product added successfully!");
    }

    public void removeProductFromInventory() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter Product ID to remove:");
        int productId = scanner.nextInt();

        Product product = inventory.findProductById(productId);
        if (product != null) {
            inventory.removeProduct(productId);
            System.out.println("Product removed successfully!");
        } else {
            System.out.println("Product not found.");
        }
    }

    public void updateProductQuantityInInventory() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter Product ID to update quantity:");
        int productId = scanner.nextInt();
        System.out.println("Enter New Quantity:");
        int newQuantity = scanner.nextInt();

        Product product = inventory.findProductById(productId);
        if (product != null) {
            inventory.updateProductQuantity(productId, newQuantity);
            System.out.println("Product quantity updated successfully!");
        } else {
            System.out.println("Product not found.");
        }
    }

    public void viewInventory() {
        inventory.displayInventory();
    }

    public void start() {
        Scanner scanner = new Scanner(System.in);
        boolean running = true;
        while (running) {
            showMainMenu();
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    viewInventory();
                    break;
                case 2:
                    addProductToInventory();
                    break;
                case 3:
                    removeProductFromInventory();
                    break;
                case 4:
                    updateProductQuantityInInventory();
                    break;
                case 5:
                    running = false;
                    System.out.println("Exiting the system.");
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}

public class InventoryManagementSystem {
    public static void main(String[] args) {
        Store store = new Store();
        store.start();
    }
}
