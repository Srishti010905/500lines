import java.util.*;

class Book {
    private int id;
    private String title;
    private String author;
    private String genre;

    public Book(int id, String title, String author, String genre) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.genre = genre;
    }

    public int getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getGenre() {
        return genre;
    }

    @Override
    public String toString() {
        return "Book ID: " + id + "\nTitle: " + title + "\nAuthor: " + author + "\nGenre: " + genre;
    }
}

class Library {
    private List<Book> books;

    public Library() {
        books = new ArrayList<>();
    }

    public void addBook(Book book) {
        books.add(book);
        System.out.println("Book added successfully!");
    }

    public void searchByTitle(String title) {
        System.out.println("Searching for books with title: " + title);
        boolean found = false;
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                System.out.println(book);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No books found with the title \"" + title + "\".");
        }
    }

    public void searchByAuthor(String author) {
        System.out.println("Searching for books by author: " + author);
        boolean found = false;
        for (Book book : books) {
            if (book.getAuthor().equalsIgnoreCase(author)) {
                System.out.println(book);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No books found by the author \"" + author + "\".");
        }
    }

    public void displayAllBooks() {
        System.out.println("\nDisplaying all books in the library:");
        if (books.isEmpty()) {
            System.out.println("No books in the library.");
        } else {
            for (Book book : books) {
                System.out.println("-------------------");
                System.out.println(book);
            }
        }
    }

    public void searchByGenre(String genre) {
        System.out.println("Searching for books in genre: " + genre);
        boolean found = false;
        for (Book book : books) {
            if (book.getGenre().equalsIgnoreCase(genre)) {
                System.out.println(book);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No books found in the genre \"" + genre + "\".");
        }
    }

    public void removeBookById(int id) {
        Iterator<Book> iterator = books.iterator();
        while (iterator.hasNext()) {
            Book book = iterator.next();
            if (book.getId() == id) {
                iterator.remove();
                System.out.println("Book with ID " + id + " removed successfully.");
                return;
            }
        }
        System.out.println("No book found with ID " + id + ".");
    }
}

public class LibraryBookSearch {
    private static int bookCounter = 1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Library library = new Library();

        while (true) {
            System.out.println("\nLibrary Menu:");
            System.out.println("1. Add Book");
            System.out.println("2. Search by Title");
            System.out.println("3. Search by Author");
            System.out.println("4. Search by Genre");
            System.out.println("5. Display All Books");
            System.out.println("6. Remove Book by ID");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter book title: ");
                    String title = scanner.nextLine();
                    System.out.print("Enter book author: ");
                    String author = scanner.nextLine();
                    System.out.print("Enter book genre: ");
                    String genre = scanner.nextLine();
                    library.addBook(new Book(bookCounter++, title, author, genre));
                    break;

                case 2:
                    System.out.print("Enter title to search: ");
                    String searchTitle = scanner.nextLine();
                    library.searchByTitle(searchTitle);
                    break;

                case 3:
                    System.out.print("Enter author to search: ");
                    String searchAuthor = scanner.nextLine();
                    library.searchByAuthor(searchAuthor);
                    break;

                case 4:
                    System.out.print("Enter genre to search: ");
                    String searchGenre = scanner.nextLine();
                    library.searchByGenre(searchGenre);
                    break;

                case 5:
                    library.displayAllBooks();
                    break;

                case 6:
                    System.out.print("Enter book ID to remove: ");
                    int idToRemove = scanner.nextInt();
                    library.removeBookById(idToRemove);
                    break;

                case 7:
                    System.out.println("Exiting the library system. Goodbye!");
                    scanner.close();
                    System.exit(0);
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
        }
    }
}
